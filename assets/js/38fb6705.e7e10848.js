"use strict";(self.webpackChunk_1_inch_docs=self.webpackChunk_1_inch_docs||[]).push([[4630],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(t),m=a,k=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return t?r.createElement(k,s(s({ref:n},u),{},{components:t})):r.createElement(k,s({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},85741:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=t(87462),a=t(63366),o=(t(67294),t(3905)),s=["components"],i={sidebar_label:"SDK Overview",sidebar_position:1,title:"SDK Overview"},p="SDK",l={unversionedId:"fusion-swap/fusion-sdk/for-integrators/sdk-overview",id:"fusion-swap/fusion-sdk/for-integrators/sdk-overview",isDocsHomePage:!1,title:"SDK Overview",description:"Description: provides high level functionality to working with fusion mode",source:"@site/docs/fusion-swap/fusion-sdk/for-integrators/sdk-overview.md",sourceDirName:"fusion-swap/fusion-sdk/for-integrators",slug:"/fusion-swap/fusion-sdk/for-integrators/sdk-overview",permalink:"/docs/fusion-swap/fusion-sdk/for-integrators/sdk-overview",editUrl:"https://github.com/1inch/1inch-docs/edit/master/docs/fusion-swap/fusion-sdk/for-integrators/sdk-overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"SDK Overview",sidebar_position:1,title:"SDK Overview"},sidebar:"tutorialSidebar",previous:{title:"Contract interaction",permalink:"/docs/fusion-swap/becoming-a-resolver/contracts-interaction"},next:{title:"Creating Fusion Orders",permalink:"/docs/fusion-swap/fusion-sdk/for-integrators/creating-fusion-orders"}},u=[{value:"Real world example",id:"real-world-example",children:[]},{value:"Creation",id:"creation",children:[]},{value:"Methods",id:"methods",children:[{value:"getActiveOrders",id:"getactiveorders",children:[]},{value:"getOrdersByMaker",id:"getordersbymaker",children:[]},{value:"getQuote",id:"getquote",children:[]},{value:"placeOrder",id:"placeorder",children:[]}]},{value:"Types",id:"types",children:[{value:"PaginationParams",id:"paginationparams",children:[]},{value:"QuoteParams",id:"quoteparams",children:[]},{value:"OrderParams",id:"orderparams",children:[]}]}],c={toc:u};function d(e){var n=e.components,t=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sdk"},"SDK"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:")," provides high level functionality to working with fusion mode"),(0,o.kt)("h2",{id:"real-world-example"},"Real world example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import {FusionSDK, NetworkEnum} from '@1inch/fusion-sdk'\n\nasync function main() {\n    const sdk = new FusionSDK({\n        url: 'https://fusion.1inch.io',\n        network: NetworkEnum.ETHEREUM\n    })\n\n    const orders = await sdk.getActiveOrders({page: 1, limit: 2})\n}\n\nmain()\n")),(0,o.kt)("h2",{id:"creation"},"Creation"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Constructor arguments:")," params: FusionSDKConfigParams"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface HttpProviderConnector {\n    get<T>(url: string): Promise<T>\n\n    post<T>(url: string, data: unknown): Promise<T>\n}\n\ninterface BlockchainProviderConnector {\n    signTypedData(\n        walletAddress: string,\n        typedData: EIP712TypedData\n    ): Promise<string>\n\n    ethCall(contractAddress: string, callData: string): Promise<string>\n}\n\ntype FusionSDKConfigParams = {\n    url: string\n    network: NetworkEnum\n    blockchainProvider?: BlockchainProviderConnector\n    httpProvider?: HttpProviderConnector // by default we are using axios\n}\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example with custom httpProvider:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import {api} from 'my-api-lib'\n\nclass CustomHttpProvider implements HttpProviderConnector {\n    get<T>(url: string): Promise<T> {\n        return api.get(url)\n    }\n\n    post<T>(url: string, data: unknown): Promise<T> {\n        return api.post(url, data)\n    }\n}\n")),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"getactiveorders"},"getActiveOrders"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:")," used to get the list of active orders\n",(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"[0]"," PaginationParams")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import {FusionSDK, NetworkEnum} from '@1inch/fusion-sdk'\nconst sdk = new FusionSDK({\n    url: 'https://fusion.1inch.io',\n    network: NetworkEnum.ETHEREUM\n})\nconst orders = await sdk.getActiveOrders({page: 1, limit: 2})\n")),(0,o.kt)("h3",{id:"getordersbymaker"},"getOrdersByMaker"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:")," used to get orders by maker"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"[0]"," params: PaginationParams & {address: string}")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import {FusionSDK, NetworkEnum} from '@1inch/fusion-sdk'\nconst sdk = new FusionSDK({\n    url: 'https://fusion.1inch.io',\n    network: NetworkEnum.ETHEREUM\n})\n\nconst orders = await sdk.getOrdersByMaker({\n    page: 1,\n    limit: 2,\n    address: '0xfa80cd9b3becc0b4403b0f421384724f2810775f'\n})\n")),(0,o.kt)("h3",{id:"getquote"},"getQuote"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:")," Get quote details based on input data"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"[0]"," params: QuoteParams")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import {FusionSDK, NetworkEnum, QuoteParams} from '@1inch/fusion-sdk'\nconst sdk = new FusionSDK({\n    url: 'https://fusion.1inch.io',\n    network: NetworkEnum.ETHEREUM\n})\n\nconst params = {\n    fromTokenAddress: '0x6b175474e89094c44da98b954eedeac495271d0f',\n    toTokenAddress: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n    amount: '1000000000000000000000'\n}\n\nconst quote = await sdk.getQuote(params)\n")),(0,o.kt)("h3",{id:"placeorder"},"placeOrder"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:")," used to create a fusion order"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"[0]"," params: OrderParams")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const makerPrivateKey = '0x123....'\nconst makerAddress = '0x123....'\n\nconst nodeUrl = '....'\n\nconst blockchainProvider = new PrivateKeyProviderConnector(\n    makerPrivateKey,\n    new Web3(nodeUrl)\n)\n\nconst sdk = new FusionSDK({\n    url: 'https://fusion.1inch.io',\n    network: 1,\n    blockchainProvider\n})\n\nsdk.placeOrder({\n    fromTokenAddress: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // WETH\n    toTokenAddress: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', // USDC\n    amount: '50000000000000000', // 0.05 ETH\n    walletAddress: makerAddress,\n    // fee is an optional field\n    fee: {\n        takingFeeBps: 100, // 1% as we use bps format, 1% is equal to 100bps\n        takingFeeReceiver: '0x0000000000000000000000000000000000000000' //  fee receiver address\n    }\n}).then(console.log)\n")),(0,o.kt)("h2",{id:"types"},"Types"),(0,o.kt)("h3",{id:"paginationparams"},"PaginationParams"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type PaginationParams = {\n    page?: number // default is 1\n    limit?: number // default is 2, min is 1, max is 500\n}\n")),(0,o.kt)("h3",{id:"quoteparams"},"QuoteParams"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type QuoteParams = {\n    fromTokenAddress: string\n    toTokenAddress: string\n    amount: string\n    permit?: string // a permit (EIP-2612) call data, user approval sign\n    takingFeeBps?: number // 100 == 1%\n}\n")),(0,o.kt)("h3",{id:"orderparams"},"OrderParams"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"enum PresetEnum {\n    fast = 'fast',\n    medium = 'medium',\n    slow = 'slow'\n}\n\ntype OrderParams = {\n    fromTokenAddress: string\n    toTokenAddress: string\n    amount: string\n    walletAddress: string\n    permit?: string // a permit (EIP-2612) call data, user approval sign\n    receiver?: string // address\n    preset?: PresetEnum\n    nonce?: OrderNonce | string | number // allows to batch cancel orders. by default: not used\n    fee?: TakingFeeInfo\n}\n\nexport type TakingFeeInfo = {\n    takingFeeBps: number // 100 == 1%\n    takingFeeReceiver: string\n}\n")))}d.isMDXComponent=!0}}]);